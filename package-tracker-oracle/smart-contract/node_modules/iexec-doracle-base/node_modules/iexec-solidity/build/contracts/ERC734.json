{
  "contractName": "ERC734",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "MANAGEMENT_KEY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getKey",
      "outputs": [
        {
          "name": "purposes",
          "type": "uint256[]"
        },
        {
          "name": "keyType",
          "type": "uint256"
        },
        {
          "name": "key",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        },
        {
          "name": "_purpose",
          "type": "uint256"
        },
        {
          "name": "_keyType",
          "type": "uint256"
        }
      ],
      "name": "addKey",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "RSA_TYPE",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "actionThreshold",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ECDSA_TYPE",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        },
        {
          "name": "_purpose",
          "type": "uint256"
        }
      ],
      "name": "removeKey",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addrToKey",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "approved",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        },
        {
          "name": "_value",
          "type": "bool"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ACTION_KEY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_purpose",
          "type": "uint256"
        }
      ],
      "name": "getKeysByPurpose",
      "outputs": [
        {
          "name": "keys",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ENCRYPTION_KEY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "managementThreshold",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "name": "executionId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CLAIM_SIGNER_KEY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numKeys",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_threshold",
          "type": "uint256"
        }
      ],
      "name": "changeManagementThreshold",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        },
        {
          "name": "purpose",
          "type": "uint256"
        }
      ],
      "name": "keyHasPurpose",
      "outputs": [
        {
          "name": "exists",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_threshold",
          "type": "uint256"
        }
      ],
      "name": "changeActionThreshold",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "executions",
      "outputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "root",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "executionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "ContractCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "purpose",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "keyType",
          "type": "uint256"
        }
      ],
      "name": "KeyAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "purpose",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "keyType",
          "type": "uint256"
        }
      ],
      "name": "KeyRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "executionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "ExecutionRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "executionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Executed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "executionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "ExecutionFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "executionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "Approved",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"MANAGEMENT_KEY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"name\":\"keyType\",\"type\":\"uint256\"},{\"name\":\"key\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_purpose\",\"type\":\"uint256\"},{\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RSA_TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"actionThreshold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ECDSA_TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addrToKey\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approved\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ACTION_KEY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ENCRYPTION_KEY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"managementThreshold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"name\":\"executionId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CLAIM_SIGNER_KEY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numKeys\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"changeManagementThreshold\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"name\":\"exists\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"changeActionThreshold\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"executions\",\"outputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"root\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Add key data to the identity if key + purpose tuple doesn't already exist\",\"params\":{\"_key\":\"Key bytes to add\",\"_keyType\":\"Key type to add\",\"_purpose\":\"Purpose to add\"},\"return\":\"`true` if key was added, `false` if it already exists\"},\"addrToKey(address)\":{\"details\":\"Convert an Ethereum address (20 bytes) to an ERC734 key (32 bytes)\"},\"approve(uint256,bool)\":{\"details\":\"External api to the approve function that considers the key of msg.sender\",\"params\":{\"_id\":\"Execution ID\",\"_value\":\"`true` if it's an approval, `false` if it's a disapproval\"},\"return\":\"`false` if it's a disapproval and there's no previous approval from the sender OR  if it's an approval that triggered a failed execution. `true` if it's a disapproval that  undos a previous approval from the sender OR if it's an approval that succeded OR  if it's an approval that triggered a succesful execution\"},\"changeActionThreshold(uint256)\":{\"details\":\"Change multi-sig threshold for ACTION_KEY\",\"params\":{\"_threshold\":\"New threshold to change it to (will throw if 0 or larger than available keys)\"}},\"changeManagementThreshold(uint256)\":{\"details\":\"Change multi-sig threshold for MANAGEMENT_KEY\",\"params\":{\"_threshold\":\"New threshold to change it to (will throw if 0 or larger than available keys)\"}},\"execute(address,uint256,bytes)\":{\"details\":\"External api to the execute function that considers the key of msg.sender\",\"params\":{\"_data\":\"ABI encoded call data (msg.data)\",\"_to\":\"address being called (msg.sender)\",\"_value\":\"ether being sent (msg.value)\"}},\"getKey(bytes32)\":{\"details\":\"Find the key data, if held by the identity\",\"params\":{\"_key\":\"Key bytes to find\"},\"return\":\"`(purposes, keyType, key)` tuple if the key exists\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Find all the keys held by this identity for a given purpose\",\"params\":{\"_purpose\":\"Purpose to find\"},\"return\":\"Array with key bytes for that purpose (empty if none)\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Find if a key has is present and has the given purpose\",\"params\":{\"_key\":\"Key bytes to find\",\"purpose\":\"Purpose to find\"},\"return\":\"Boolean indicating whether the key exists or not\"},\"numKeys()\":{\"details\":\"Number of keys managed by the contract\",\"return\":\"Unsigned integer number of keys\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Remove key data from the identity\",\"params\":{\"_key\":\"Key bytes to remove\",\"_purpose\":\"Purpose to remove\"},\"return\":\"`true` if key was found and removed, `false` if it wasn't found\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734.sol\":\"ERC734\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734.sol\":{\"keccak256\":\"0xef1c5ab9b0d585b9c146da9db5dfb0409facb0532217c3063e0b817504a5a69c\",\"urls\":[\"bzzr://8851fa58421a5b3a17b7d648ee45095535b333674e30c608795ce48b9e44cc62\",\"dweb:/ipfs/QmVFcG3KArWSVTZmua2nnp1eKRfnLH5fYdcnpNkr2FwbF5\"]},\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734Execute.sol\":{\"keccak256\":\"0x2db4a99633454e80ec22322ec22d619b0308f977c6557cdd15407017eadb60c6\",\"urls\":[\"bzzr://5ecee6668a3d5002517f3edeb066acfe7b3b897ad5cb0f1721cd4b0adddc60e6\",\"dweb:/ipfs/QmbbtdBj3puHAMzvABjGsHurw1Q7b6suUGZQAehkJKtzJu\"]},\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734KeyBase.sol\":{\"keccak256\":\"0x192b60cd983963e826ab0fc106622d51edaec6cf9f66c7b0e537abdd8c488b3c\",\"urls\":[\"bzzr://4bf81c2d9011f2f4c874b16d59405b7b9bad86c62462d0a4e7a20b1be2aee7d9\",\"dweb:/ipfs/QmeecAisGRG1gXtbdDYSbK1DNCaUeQHnvPFuuhdhTwWEYE\"]},\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734KeyGetters.sol\":{\"keccak256\":\"0xc23637ac9175b768a7c468b9b3d8c16f9fd774137d5994b0963f78bd85310852\",\"urls\":[\"bzzr://c9d5776e4e1881fc2a5e9ca92657a5f0cef02bbfcdf4a8ff3f46d2f7b8bb4882\",\"dweb:/ipfs/QmPgJB8zoWSfjyqfvAgdtiHNEfw7CVjFMeJMn25WMHFGpt\"]},\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734KeyManagement.sol\":{\"keccak256\":\"0x0814ff61bf87804a09494e8488bce8dd3bcff9eeaee0bc988ce1e7afa8543868\",\"urls\":[\"bzzr://aeb0e0fbccc0275255949f4a60d66d2cb2997c3ff205c434f24447cfc3d9b342\",\"dweb:/ipfs/Qmetwvu6ikp9raXrRQK8LsKg8sHhQJwcZ8WSNmmUcSJiqr\"]},\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/IERC734.sol\":{\"keccak256\":\"0x46532e2d419a87bf604b354318a19d56a3dc25fa7ad6f94c77bd2aa8ce54a755\",\"urls\":[\"bzzr://8ada95bcec956bdd6e7c4e3ec840e9e13cfc04584668d0df2c00459f94d74541\",\"dweb:/ipfs/QmPMM8Prd6iG2g23gbu3arBiy8F8CiDuEZMJPd99WYpXbf\"]},\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/KeyStoreLib.sol\":{\"keccak256\":\"0x67453dd06877ae646e55e973b94b44c9ba3ecbed11aae35a7b7eec46d754654e\",\"urls\":[\"bzzr://da66de0fff2844bfbc2f294838400e68b085b619925006525b2eca99a791953e\",\"dweb:/ipfs/QmTDuPL7bZRcfi4KfpArGq8qEvzC8yvAgyz6xtdrVTLrvs\"]}},\"version\":1}",
  "bytecode": "0x608060405260016003556001600455600060055534801561001f57600080fd5b506040516117a43803806117a48339818101604052602081101561004257600080fd5b5051610059816001806001600160e01b0361005f16565b5061011e565b61007b83838360006100af60201b610c9517909392919060201c565b8082847f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e960405160405180910390a4505050565b60008381526020858152604082208054600181018255818452919092200183905560028101546100e85760028101849055600181018290555b50506000908152600180840160209081526040832080548084018255908452922090910191909155600290910180549091019055565b6116778061012d6000396000f3fe60806040526004361061012a5760003560e01c806375e5598c116100ab578063c67021871161006f578063c67021871461044e578063c9d24ecc14610463578063ccfe586814610478578063d202158d146104a2578063e99896b8146104d2578063f76c9229146104fc5761012a565b806375e5598c146102295780639010f726146103185780639e140cc814610392578063aa0a5142146103a7578063b61d27f6146103bc5761012a565b806349991ec8116100f257806349991ec81461012c57806353d413c51461025357806363f14c3c146102835780636e4c4311146102b6578063747442d3146102e65761012a565b8063058b316c1461012c57806312aaac70146101535780631d381240146101df5780632d32d4421461022957806338f4edd41461023e575b005b34801561013857600080fd5b506101416105be565b60408051918252519081900360200190f35b34801561015f57600080fd5b5061017d6004803603602081101561017657600080fd5b50356105c3565b6040518080602001848152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156101c95781810151838201526020016101b1565b5050505090500194505050505060405180910390f35b3480156101eb57600080fd5b506102156004803603606081101561020257600080fd5b5080359060208101359060400135610638565b604080519115158252519081900360200190f35b34801561023557600080fd5b50610141610719565b34801561024a57600080fd5b5061014161071e565b34801561025f57600080fd5b506102156004803603604081101561027657600080fd5b5080359060200135610724565b34801561028f57600080fd5b50610141600480360360208110156102a657600080fd5b50356001600160a01b0316610840565b3480156102c257600080fd5b50610141600480360360408110156102d957600080fd5b508035906020013561087c565b3480156102f257600080fd5b506102156004803603604081101561030957600080fd5b508035906020013515156108aa565b34801561032457600080fd5b506103426004803603602081101561033b57600080fd5b50356108bf565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561037e578181015183820152602001610366565b505050509050019250505060405180910390f35b34801561039e57600080fd5b50610141610921565b3480156103b357600080fd5b50610141610926565b3480156103c857600080fd5b50610141600480360360608110156103df57600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561040f57600080fd5b82018360208201111561042157600080fd5b8035906020019184600183028401116401000000008311171561044357600080fd5b50909250905061092c565b34801561045a57600080fd5b50610141610983565b34801561046f57600080fd5b50610141610988565b34801561048457600080fd5b5061012a6004803603602081101561049b57600080fd5b503561098f565b3480156104ae57600080fd5b50610215600480360360408110156104c557600080fd5b5080359060200135610a3b565b3480156104de57600080fd5b5061012a600480360360208110156104f557600080fd5b5035610a4e565b34801561050857600080fd5b506105266004803603602081101561051f57600080fd5b5035610afa565b60405180846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610581578181015183820152602001610569565b50505050905090810190601f1680156105ae5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b600181565b600081815260208181526040808320805482518185028101850190935280835260609493849391839183018282801561061b57602002820191906000526020600020905b815481526020019060010190808311610607575b505050505093508060010154925080600201549150509193909250565b60003330146106ad57600354600114801561066a575061066a61065a33610840565b600090600163ffffffff610bb016565b6106ad576040805162461bcd60e51b815260206004820152600f60248201526e1bdb9b1e4b5b585b9859d95b595b9d608a1b604482015290519081900360640190fd5b6106bf6000858563ffffffff610bb016565b156106cc57506000610712565b6106df600085858563ffffffff610c9516565b8183857f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e960405160405180910390a45060015b9392505050565b600281565b60045481565b6000333014610789576003546001148015610746575061074661065a33610840565b610789576040805162461bcd60e51b815260206004820152600f60248201526e1bdb9b1e4b5b585b9859d95b595b9d608a1b604482015290519081900360640190fd5b6001821480156107c55750600354600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f54145b156107d25750600061083a565b6107e46000848463ffffffff610bb016565b6107f05750600061083a565b600061080381858563ffffffff610d0416565b90508083857f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d339760405160405180910390a460019150505b92915050565b6040805160609290921b6bffffffffffffffffffffffff1916602080840191909152815160148185030181526034909301909152815191012090565b6007602052816000526040600020818154811061089557fe5b90600052602060002001600091509150505481565b60006107126108b833610840565b8484610ea0565b60008181526001602090815260409182902080548351818402810184019094528084526060939283018282801561091557602002820191906000526020600020905b815481526020019060010190808311610901575b50505050509050919050565b600481565b60035481565b600061097861093a33610840565b868686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061112b92505050565b90505b949350505050565b600381565b6002545b90565b3330146109f25760035460011480156109af57506109af61065a33610840565b6109f2576040805162461bcd60e51b815260206004820152600f60248201526e1bdb9b1e4b5b585b9859d95b595b9d608a1b604482015290519081900360640190fd5b600081118015610a2d5750600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f548111155b610a3657600080fd5b600355565b600061071281848463ffffffff610bb016565b333014610ab1576003546001148015610a6e5750610a6e61065a33610840565b610ab1576040805162461bcd60e51b815260206004820152600f60248201526e1bdb9b1e4b5b585b9859d95b595b9d608a1b604482015290519081900360640190fd5b600081118015610aec5750600260005260016020527fd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec330f548111155b610af557600080fd5b600455565b60066020908152600091825260409182902080546001808301546002808501805488516101009582161595909502600019011691909104601f81018790048702840187019097528683526001600160a01b03909316959094919291830182828015610ba65780601f10610b7b57610100808354040283529160200191610ba6565b820191906000526020600020905b815481529060010190602001808311610b8957829003601f168201915b5050505050905083565b6000610bba61153c565b6000848152602086815260409182902082518154608093810282018401909452606081018481529093919284928491840182828015610c1857602002820191906000526020600020905b815481526020019060010190808311610c04575b505050918352505060018201546020820152600290910154604091820152810151909150610c4a576000915050610712565b60005b815151811015610c89578382600001518281518110610c6857fe5b60200260200101511415610c8157600192505050610712565b600101610c4d565b50600095945050505050565b6000838152602085815260408220805460018101825581845291909220018390556002810154610cce5760028101849055600181018290555b50506000908152600180840160209081526040832080548084018255908452922090910191909155600290910180549091019055565b60008281526020849052604081206001810154915b8154811015610dbc5783828281548110610d2f57fe5b90600052602060002001541415610db457815482906000198101908110610d5257fe5b9060005260206000200154828281548110610d6957fe5b600091825260209091200155815482906000198101908110610d8757fe5b60009182526020822001558154610da2836000198301611560565b50600286018054600019019055610dbc565b600101610d19565b508054610ded57600084815260208690526040812090610ddc8282611589565b506000600182018190556002909101555b60008381526001860160205260408120905b8154811015610e965785828281548110610e1557fe5b90600052602060002001541415610e8e57815482906000198101908110610e3857fe5b9060005260206000200154828281548110610e4f57fe5b600091825260209091200155815482906000198101908110610e6d57fe5b60009182526020822001558154610e88836000198301611560565b50610e96565b600101610dff565b5050509392505050565b6000828152600660209081526040808320600790925282208054610ec357600080fd5b8154610eec9087906001600160a01b0316301461065a5760025b6000919063ffffffff610bb016565b610ef557600080fd5b604080518515158152905186917fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8919081900360200190a2831561107e57600160005b8254811015610f705787838281548110610f4e57fe5b90600052602060002001541415610f685760009150610f70565b600101610f38565b508015610f8d578154600181018355600083815260209020018790555b82546000906001600160a01b03163014610fa957600454610fad565b6003545b8354909150811161107157835460018086015460028088018054604080516020601f600019988516156101000298909801909316949094049586018290048202840182019052848352611066958d956001600160a01b039091169493929183018282801561105c5780601f106110315761010080835404028352916020019161105c565b820191906000526020600020905b81548152906001019060200180831161103f57829003601f168201915b5050505050611369565b945050505050610712565b6001945050505050610712565b60005b815481101561111f578682828154811061109757fe5b90600052602060002001541415611117578154829060001981019081106110ba57fe5b90600052602060002001548282815481106110d157fe5b6000918252602090912001558154829060001981019081106110ef57fe5b6000918252602082200155815461110a836000198301611560565b5060019350505050610712565b600101611081565b50600092505050610712565b6000611148856001600160a01b038616301461065a576002610edd565b61115157600080fd5b3084848460056000815460010191905081905560405160200180866001600160a01b03166001600160a01b031660601b8152601401856001600160a01b03166001600160a01b031660601b815260140184815260200183805190602001908083835b602083106111d25780518252601f1990920191602091820191016111b3565b51815160209384036101000a600019018019909216911617905292019384525060408051808503815293820181528351938201939093206000818152600683529390932080546001600160a01b0319166001600160a01b038d16178155600181018b9055895193985061125397506002019550880193509091506115aa9050565b5060008181526007602090815260408083208054600181018255908452828420018890558051828152855181840152855187946001600160a01b038a169487947f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8948a949093849392840192860191908190849084905b838110156112e25781810151838201526020016112ca565b50505050905090810190601f16801561130f5780820380516001836020036101000a031916815260200191505b509250505060405180910390a460006001600160a01b03851630146113365760045461133a565b6003545b60008381526007602052604090205490915081116113605761135e82868686611369565b505b50949350505050565b60006001600160a01b0384166113cf5760008251602084016000f0604080516001600160a01b038316815290516001945091925087917f9c275c9d7bdddb2ca162a8f5e9d3bbbf2922accedfd8372561a6211fc4e381469181900360200190a2506113df565b60008083516020850186885af190505b801561148f5782846001600160a01b0316867f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8856040518080602001828103825283818151815260200191508051906020019080838360005b83811015611450578181015183820152602001611438565b50505050905090810190601f16801561147d5780820380516001836020036101000a031916815260200191505b509250505060405180910390a461097b565b82846001600160a01b0316867fe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68856040518080602001828103825283818151815260200191508051906020019080838360005b838110156114fa5781810151838201526020016114e2565b50505050905090810190601f1680156115275780820380516001836020036101000a031916815260200191505b509250505060405180910390a4949350505050565b60405180606001604052806060815260200160008152602001600080191681525090565b81548183558181111561158457600083815260209020611584918101908301611628565b505050565b50805460008255906000526020600020908101906115a79190611628565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106115eb57805160ff1916838001178555611618565b82800160010185558215611618579182015b828111156116185782518255916020019190600101906115fd565b50611624929150611628565b5090565b61098c91905b80821115611624576000815560010161162e56fea265627a7a723058207ef86d695208c7cb9282c9df15f3bdbe15cd2c459ebcbb188e25fa3d9d39991064736f6c634300050a0032",
  "deployedBytecode": "0x60806040526004361061012a5760003560e01c806375e5598c116100ab578063c67021871161006f578063c67021871461044e578063c9d24ecc14610463578063ccfe586814610478578063d202158d146104a2578063e99896b8146104d2578063f76c9229146104fc5761012a565b806375e5598c146102295780639010f726146103185780639e140cc814610392578063aa0a5142146103a7578063b61d27f6146103bc5761012a565b806349991ec8116100f257806349991ec81461012c57806353d413c51461025357806363f14c3c146102835780636e4c4311146102b6578063747442d3146102e65761012a565b8063058b316c1461012c57806312aaac70146101535780631d381240146101df5780632d32d4421461022957806338f4edd41461023e575b005b34801561013857600080fd5b506101416105be565b60408051918252519081900360200190f35b34801561015f57600080fd5b5061017d6004803603602081101561017657600080fd5b50356105c3565b6040518080602001848152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156101c95781810151838201526020016101b1565b5050505090500194505050505060405180910390f35b3480156101eb57600080fd5b506102156004803603606081101561020257600080fd5b5080359060208101359060400135610638565b604080519115158252519081900360200190f35b34801561023557600080fd5b50610141610719565b34801561024a57600080fd5b5061014161071e565b34801561025f57600080fd5b506102156004803603604081101561027657600080fd5b5080359060200135610724565b34801561028f57600080fd5b50610141600480360360208110156102a657600080fd5b50356001600160a01b0316610840565b3480156102c257600080fd5b50610141600480360360408110156102d957600080fd5b508035906020013561087c565b3480156102f257600080fd5b506102156004803603604081101561030957600080fd5b508035906020013515156108aa565b34801561032457600080fd5b506103426004803603602081101561033b57600080fd5b50356108bf565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561037e578181015183820152602001610366565b505050509050019250505060405180910390f35b34801561039e57600080fd5b50610141610921565b3480156103b357600080fd5b50610141610926565b3480156103c857600080fd5b50610141600480360360608110156103df57600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561040f57600080fd5b82018360208201111561042157600080fd5b8035906020019184600183028401116401000000008311171561044357600080fd5b50909250905061092c565b34801561045a57600080fd5b50610141610983565b34801561046f57600080fd5b50610141610988565b34801561048457600080fd5b5061012a6004803603602081101561049b57600080fd5b503561098f565b3480156104ae57600080fd5b50610215600480360360408110156104c557600080fd5b5080359060200135610a3b565b3480156104de57600080fd5b5061012a600480360360208110156104f557600080fd5b5035610a4e565b34801561050857600080fd5b506105266004803603602081101561051f57600080fd5b5035610afa565b60405180846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610581578181015183820152602001610569565b50505050905090810190601f1680156105ae5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b600181565b600081815260208181526040808320805482518185028101850190935280835260609493849391839183018282801561061b57602002820191906000526020600020905b815481526020019060010190808311610607575b505050505093508060010154925080600201549150509193909250565b60003330146106ad57600354600114801561066a575061066a61065a33610840565b600090600163ffffffff610bb016565b6106ad576040805162461bcd60e51b815260206004820152600f60248201526e1bdb9b1e4b5b585b9859d95b595b9d608a1b604482015290519081900360640190fd5b6106bf6000858563ffffffff610bb016565b156106cc57506000610712565b6106df600085858563ffffffff610c9516565b8183857f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e960405160405180910390a45060015b9392505050565b600281565b60045481565b6000333014610789576003546001148015610746575061074661065a33610840565b610789576040805162461bcd60e51b815260206004820152600f60248201526e1bdb9b1e4b5b585b9859d95b595b9d608a1b604482015290519081900360640190fd5b6001821480156107c55750600354600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f54145b156107d25750600061083a565b6107e46000848463ffffffff610bb016565b6107f05750600061083a565b600061080381858563ffffffff610d0416565b90508083857f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d339760405160405180910390a460019150505b92915050565b6040805160609290921b6bffffffffffffffffffffffff1916602080840191909152815160148185030181526034909301909152815191012090565b6007602052816000526040600020818154811061089557fe5b90600052602060002001600091509150505481565b60006107126108b833610840565b8484610ea0565b60008181526001602090815260409182902080548351818402810184019094528084526060939283018282801561091557602002820191906000526020600020905b815481526020019060010190808311610901575b50505050509050919050565b600481565b60035481565b600061097861093a33610840565b868686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061112b92505050565b90505b949350505050565b600381565b6002545b90565b3330146109f25760035460011480156109af57506109af61065a33610840565b6109f2576040805162461bcd60e51b815260206004820152600f60248201526e1bdb9b1e4b5b585b9859d95b595b9d608a1b604482015290519081900360640190fd5b600081118015610a2d5750600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f548111155b610a3657600080fd5b600355565b600061071281848463ffffffff610bb016565b333014610ab1576003546001148015610a6e5750610a6e61065a33610840565b610ab1576040805162461bcd60e51b815260206004820152600f60248201526e1bdb9b1e4b5b585b9859d95b595b9d608a1b604482015290519081900360640190fd5b600081118015610aec5750600260005260016020527fd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec330f548111155b610af557600080fd5b600455565b60066020908152600091825260409182902080546001808301546002808501805488516101009582161595909502600019011691909104601f81018790048702840187019097528683526001600160a01b03909316959094919291830182828015610ba65780601f10610b7b57610100808354040283529160200191610ba6565b820191906000526020600020905b815481529060010190602001808311610b8957829003601f168201915b5050505050905083565b6000610bba61153c565b6000848152602086815260409182902082518154608093810282018401909452606081018481529093919284928491840182828015610c1857602002820191906000526020600020905b815481526020019060010190808311610c04575b505050918352505060018201546020820152600290910154604091820152810151909150610c4a576000915050610712565b60005b815151811015610c89578382600001518281518110610c6857fe5b60200260200101511415610c8157600192505050610712565b600101610c4d565b50600095945050505050565b6000838152602085815260408220805460018101825581845291909220018390556002810154610cce5760028101849055600181018290555b50506000908152600180840160209081526040832080548084018255908452922090910191909155600290910180549091019055565b60008281526020849052604081206001810154915b8154811015610dbc5783828281548110610d2f57fe5b90600052602060002001541415610db457815482906000198101908110610d5257fe5b9060005260206000200154828281548110610d6957fe5b600091825260209091200155815482906000198101908110610d8757fe5b60009182526020822001558154610da2836000198301611560565b50600286018054600019019055610dbc565b600101610d19565b508054610ded57600084815260208690526040812090610ddc8282611589565b506000600182018190556002909101555b60008381526001860160205260408120905b8154811015610e965785828281548110610e1557fe5b90600052602060002001541415610e8e57815482906000198101908110610e3857fe5b9060005260206000200154828281548110610e4f57fe5b600091825260209091200155815482906000198101908110610e6d57fe5b60009182526020822001558154610e88836000198301611560565b50610e96565b600101610dff565b5050509392505050565b6000828152600660209081526040808320600790925282208054610ec357600080fd5b8154610eec9087906001600160a01b0316301461065a5760025b6000919063ffffffff610bb016565b610ef557600080fd5b604080518515158152905186917fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8919081900360200190a2831561107e57600160005b8254811015610f705787838281548110610f4e57fe5b90600052602060002001541415610f685760009150610f70565b600101610f38565b508015610f8d578154600181018355600083815260209020018790555b82546000906001600160a01b03163014610fa957600454610fad565b6003545b8354909150811161107157835460018086015460028088018054604080516020601f600019988516156101000298909801909316949094049586018290048202840182019052848352611066958d956001600160a01b039091169493929183018282801561105c5780601f106110315761010080835404028352916020019161105c565b820191906000526020600020905b81548152906001019060200180831161103f57829003601f168201915b5050505050611369565b945050505050610712565b6001945050505050610712565b60005b815481101561111f578682828154811061109757fe5b90600052602060002001541415611117578154829060001981019081106110ba57fe5b90600052602060002001548282815481106110d157fe5b6000918252602090912001558154829060001981019081106110ef57fe5b6000918252602082200155815461110a836000198301611560565b5060019350505050610712565b600101611081565b50600092505050610712565b6000611148856001600160a01b038616301461065a576002610edd565b61115157600080fd5b3084848460056000815460010191905081905560405160200180866001600160a01b03166001600160a01b031660601b8152601401856001600160a01b03166001600160a01b031660601b815260140184815260200183805190602001908083835b602083106111d25780518252601f1990920191602091820191016111b3565b51815160209384036101000a600019018019909216911617905292019384525060408051808503815293820181528351938201939093206000818152600683529390932080546001600160a01b0319166001600160a01b038d16178155600181018b9055895193985061125397506002019550880193509091506115aa9050565b5060008181526007602090815260408083208054600181018255908452828420018890558051828152855181840152855187946001600160a01b038a169487947f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8948a949093849392840192860191908190849084905b838110156112e25781810151838201526020016112ca565b50505050905090810190601f16801561130f5780820380516001836020036101000a031916815260200191505b509250505060405180910390a460006001600160a01b03851630146113365760045461133a565b6003545b60008381526007602052604090205490915081116113605761135e82868686611369565b505b50949350505050565b60006001600160a01b0384166113cf5760008251602084016000f0604080516001600160a01b038316815290516001945091925087917f9c275c9d7bdddb2ca162a8f5e9d3bbbf2922accedfd8372561a6211fc4e381469181900360200190a2506113df565b60008083516020850186885af190505b801561148f5782846001600160a01b0316867f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8856040518080602001828103825283818151815260200191508051906020019080838360005b83811015611450578181015183820152602001611438565b50505050905090810190601f16801561147d5780820380516001836020036101000a031916815260200191505b509250505060405180910390a461097b565b82846001600160a01b0316867fe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68856040518080602001828103825283818151815260200191508051906020019080838360005b838110156114fa5781810151838201526020016114e2565b50505050905090810190601f1680156115275780820380516001836020036101000a031916815260200191505b509250505060405180910390a4949350505050565b60405180606001604052806060815260200160008152602001600080191681525090565b81548183558181111561158457600083815260209020611584918101908301611628565b505050565b50805460008255906000526020600020908101906115a79190611628565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106115eb57805160ff1916838001178555611618565b82800160010185558215611618579182015b828111156116185782518255916020019190600101906115fd565b50611624929150611628565b5090565b61098c91905b80821115611624576000815560010161162e56fea265627a7a723058207ef86d695208c7cb9282c9df15f3bdbe15cd2c459ebcbb188e25fa3d9d39991064736f6c634300050a0032",
  "sourceMap": "125:194:20:-;;;613:1:22;576:38;;654:1;617:38;;506:1:21;480:27;;233:84:20;8:9:-1;5:2;;;30:1;27;20:12;5:2;233:84:20;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;233:84:20;272:41;233:84;140:1:25;;-1:-1:-1;;;;;272:7:20;:41;:::i;:::-;233:84;125:194;;1742:174:24;1833:36;1844:4;1850:8;1860;1833:6;:10;;;;;;:36;;;;;;:::i;:::-;1903:8;1893;1887:4;1878:34;;;;;;;;;;1742:174;;;:::o;1129:283:26:-;1223:13;1239:14;;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;1257:24:26;;;;;;;;;;;1289:5;;;;1285:67;;1308:5;;;:15;;;1328:9;;;:19;;;1285:67;-1:-1:-1;;1355:27:26;;;;:18;;;;:27;;;;;;;27:10:-1;;23:18;;;45:23;;1355:37:26;;;;;;;;;;;;1396:10;;;;:12;;;;;;;1129:283::o;125:194:20:-;;;;;;;",
  "deployedSourceMap": "125:194:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;99:42:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;99:42:25;;;:::i;:::-;;;;;;;;;;;;;;;;613:235:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;613:235:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;613:235:23;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;613:235:23;;;;;;;;;;;;;;;;;;;584:309:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;584:309:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;584:309:24;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;679:36:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;679:36:25;;;:::i;617:38:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;617:38:22;;;:::i;1093:462:24:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1093:462:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1093:462:24;;;;;;;:::i;440:115:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;440:115:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;440:115:22;-1:-1:-1;;;;;440:115:22;;:::i;582:46:21:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;582:46:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;582:46:21;;;;;;;:::i;6746:138::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6746:138:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6746:138:21;;;;;;;;;:::i;1360::23:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1360:138:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1360:138:23;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1360:138:23;;;;;;;;;;;;;;;;;496:42:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;496:42:25;;;:::i;576:38:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;576:38:22;;;:::i;3833:200:21:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3833:200:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;3833:200:21;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3833:200:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3833:200:21;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;3833:200:21;;-1:-1:-1;3833:200:21;-1:-1:-1;3833:200:21;:::i;383:44:25:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;383:44:25;;;:::i;379:79:23:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;379:79:23;;;:::i;789:239:21:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;789:239:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;789:239:21;;:::i;1049:134:23:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1049:134:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1049:134:23;;;;;;;:::i;1184:259:21:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1184:259:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1184:259:21;;:::i;531:48::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;531:48:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;531:48:21;;:::i;:::-;;;;;-1:-1:-1;;;;;531:48:21;-1:-1:-1;;;;;531:48:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;531:48:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;99:42:25;140:1;99:42;:::o;613:235:23:-;695:15;758:17;;;;;;;;;;;779:21;;;;;;;;;;;;;;;;;668:25;;695:15;;;779:21;758:17;;779:21;;758:17;779:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;815:1;:9;;;804:20;;839:1;:5;;;828:16;;613:235;;;;;;:::o;584:309:24:-;695:12;770:10:22;792:4;770:27;766:151;;814:19;;837:1;814:24;:78;;;;;842:50;854:21;864:10;854:9;:21::i;:::-;842:6;;140:1:25;842:50:22;:11;:50;:::i;:::-;806:106;;;;;-1:-1:-1;;;806:106:22;;;;;;;;;;;;-1:-1:-1;;;806:106:22;;;;;;;;;;;;;;;739:27:24;:6;751:4;757:8;739:27;:11;:27;:::i;:::-;735:57;;;-1:-1:-1;782:5:24;775:12;;735:57;795:36;:6;806:4;812:8;822;795:36;:10;:36;:::i;:::-;865:8;855;849:4;840:34;;;;;;;;;;-1:-1:-1;885:4:24;920:1:22;584:309:24;;;;;:::o;679:36:25:-;714:1;679:36;:::o;617:38:22:-;;;;:::o;1093:462:24:-;1187:12;770:10:22;792:4;770:27;766:151;;814:19;;837:1;814:24;:78;;;;;842:50;854:21;864:10;854:9;:21::i;842:50::-;806:106;;;;;-1:-1:-1;;;806:106:22;;;;;;;;;;;;-1:-1:-1;;;806:106:22;;;;;;;;;;;;;;;140:1:25;1239:8:24;:26;:96;;;;-1:-1:-1;1316:19:24;;1269:20;:6;:36;;;;;;:43;:66;1239:96;1235:126;;;-1:-1:-1;1351:5:24;1344:12;;1235:126;1389:27;:6;1401:4;1407:8;1389:27;:11;:27;:::i;:::-;1384:58;;-1:-1:-1;1432:5:24;1425:12;;1384:58;1445:15;1463:29;1445:15;1477:4;1483:8;1463:29;:13;:29;:::i;:::-;1445:47;;1528:7;1518:8;1512:4;1501:35;;;;;;;;;;1547:4;1540:11;;;920:1:22;1093:462:24;;;;:::o;440:115:22:-;528:22;;;;;;;;-1:-1:-1;;528:22:22;;;;;;;;;;;;26:21:-1;;;22:32;6:49;;528:22:22;;;;;;;518:33;;;;;;440:115::o;582:46:21:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6746:138::-;6809:12;6835:45;6845:21;6855:10;6845:9;:21::i;:::-;6868:3;6873:6;6835:9;:45::i;1360:138:23:-;1464:6;:30;;;:20;:30;;;;;;;;;1457:37;;;;;;;;;;;;;;;;;1429:21;;1457:37;;;1464:30;1457:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1360:138;;;:::o;496:42:25:-;537:1;496:42;:::o;576:38:22:-;;;;:::o;3833:200:21:-;3944:19;3977:52;3987:21;3997:10;3987:9;:21::i;:::-;4010:3;4015:6;4023:5;;3977:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3977:9:21;;-1:-1:-1;;;3977:52:21:i;:::-;3970:59;;3833:200;;;;;;;:::o;383:44:25:-;426:1;383:44;:::o;379:79:23:-;442:12;;379:79;;:::o;789:239:21:-;770:10:22;792:4;770:27;766:151;;814:19;;837:1;814:24;:78;;;;;842:50;854:21;864:10;854:9;:21::i;842:50::-;806:106;;;;;-1:-1:-1;;;806:106:22;;;;;;;;;;;;-1:-1:-1;;;806:106:22;;;;;;;;;;;;;;;925:1:21;912:10;:14;:75;;;;-1:-1:-1;944:20:21;:6;:36;;;;;;:43;930:57;;;912:75;904:84;;;;;;992:19;:32;789:239::o;1049:134:23:-;1128:11;1153:26;1128:11;1165:4;1171:7;1153:26;:11;:26;:::i;1184:259:21:-;770:10:22;792:4;770:27;766:151;;814:19;;837:1;814:24;:78;;;;;842:50;854:21;864:10;854:9;:21::i;842:50::-;806:106;;;;;-1:-1:-1;;;806:106:22;;;;;;;;;;;;-1:-1:-1;;;806:106:22;;;;;;;;;;;;;;;1316:1:21;1303:10;:14;:71;;;;-1:-1:-1;285:1:25;1335:6:21;:32;:20;:32;;;:39;1321:53;;;1303:71;1295:80;;;;;;1411:15;:28;1184:259::o;531:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;531:48:21;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:48:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;686:316:26:-;775:10;792:12;;:::i;:::-;807:9;:14;;;;;;;;;;;;792:29;;;;;;;;;;;;;;;;;;;;;;;807:14;;792:29;;807:14;;792:29;;807:14;792:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;792:29:26;;;-1:-1:-1;;792:29:26;;;;;;;;;;;;;;;;;;829:5;;;792:29;;-1:-1:-1;825:40:26;;855:5;848:12;;;;;825:40;873:9;868:115;892:10;;:17;888:21;;868:115;;;944:7;927:1;:10;;;938:1;927:13;;;;;;;;;;;;;;:24;923:56;;;969:4;962:11;;;;;;923:56;911:3;;868:115;;;-1:-1:-1;993:5:26;;686:316;-1:-1:-1;;;;;686:316:26:o;1129:283::-;1223:13;1239:14;;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;1257:24:26;;;;;;;;;;;1289:5;;;;1285:67;;1308:5;;;:15;;;1328:9;;;:19;;;1285:67;-1:-1:-1;;1355:27:26;;;;:18;;;;:27;;;;;;;27:10:-1;;23:18;;;45:23;;1355:37:26;;;;;;;;;;;;1396:10;;;;:12;;;;;;;1129:283::o;1560:735::-;1645:15;1677:14;;;;;;;;;;:22;;;;;1783:181;1807:8;;1803:12;;1783:181;;;1841:7;1833:1;1835;1833:4;;;;;;;;;;;;;;;;:15;1829:131;;;1868:8;;1866:1;;-1:-1:-1;;1868:12:26;;;1866:15;;;;;;;;;;;;;;1859:1;1861;1859:4;;;;;;;;;;;;;;;;;:22;1896:8;;1894:1;;-1:-1:-1;;1896:12:26;;;1894:15;;;;;;;;;;;;;;1887:22;1915:10;;;:1;-1:-1:-1;;1915:10:26;;;:::i;:::-;-1:-1:-1;1931:10:26;;;:12;;-1:-1:-1;;1931:12:26;;;1949:5;;1829:131;1817:3;;1783:181;;;-1:-1:-1;1993:8:26;;1989:52;;2022:9;:14;;;;;;;;;;;2015:21;2022:14;:9;2015:21;:::i;:::-;-1:-1:-1;2015:21:26;;;;;;;;;;;;1989:52;2080:19;2102:27;;;:18;;;:27;;;;;;2133:159;2157:8;;2153:12;;2133:159;;;2191:3;2183:1;2185;2183:4;;;;;;;;;;;;;;;;:11;2179:109;;;2214:8;;2212:1;;-1:-1:-1;;2214:12:26;;;2212:15;;;;;;;;;;;;;;2205:1;2207;2205:4;;;;;;;;;;;;;;;;;:22;2242:8;;2240:1;;-1:-1:-1;;2242:12:26;;;2240:15;;;;;;;;;;;;;;2233:22;2261:10;;;:1;-1:-1:-1;;2261:10:26;;;:::i;:::-;;2277:5;;2179:109;2167:3;;2133:159;;;;1560:735;;;;;;;:::o;4818:1394:21:-;4909:12;4958:15;;;:10;:15;;;;;;;;5007:8;:13;;;;;5078:16;;5070:29;;;;;;5176:12;;5151:88;;5167:4;;-1:-1:-1;;;;;5176:12:21;5200:4;5176:29;:59;;285:1:25;5176:59:21;5151:6;;:88;;:11;:88;:::i;:::-;5143:97;;;;;;5250:21;;;;;;;;;;5259:3;;5250:21;;;;;;;;;;5280:6;5276:933;;;5338:4;5319:16;5347:136;5371:16;;5367:20;;5347:136;;;5423:4;5407:9;5417:1;5407:12;;;;;;;;;;;;;;;;:20;5403:75;;;5454:5;5440:19;;5466:5;;5403:75;5389:3;;5347:136;;;;5491:11;5487:67;;;27:10:-1;;39:1;23:18;;45:23;;-1:-1;5528:20:21;;;;;;;;;;5487:67;5580:12;;5559:17;;-1:-1:-1;;;;;5580:12:21;5604:4;5580:29;5579:71;;5635:15;;5579:71;;;5613:19;;5579:71;5659:16;;5559:91;;-1:-1:-1;5659:29:21;-1:-1:-1;5655:217:21;;5725:12;;;5739:15;;;;5756:14;;;;5706:65;;;;;;;-1:-1:-1;;5706:65:21;;;;5725:12;5706:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5720:3;;-1:-1:-1;;;;;5725:12:21;;;;5739:15;5706:65;5756:14;5706:65;;5756:14;5706:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:65::i;:::-;5699:72;;;;;;;;5655:217;5862:4;5855:11;;;;;;;;5276:933;5932:9;5927:261;5951:16;;5947:20;;5927:261;;;6003:4;5987:9;5997:1;5987:12;;;;;;;;;;;;;;;;:20;5983:200;;;6067:16;;6057:9;;-1:-1:-1;;6067:20:21;;;6057:31;;;;;;;;;;;;;;6042:9;6052:1;6042:12;;;;;;;;;;;;;;;;;:46;6112:16;;6102:9;;-1:-1:-1;;6112:20:21;;;6102:31;;;;;;;;;;;;;;6095:38;6140:18;;;:9;-1:-1:-1;;6140:18:21;;;:::i;:::-;;6172:4;6165:11;;;;;;;5983:200;5969:3;;5927:261;;;;6199:5;6192:12;;;;;;2656:941;2787:19;2860:79;2876:4;-1:-1:-1;;;;;2885:20:21;;2900:4;2885:20;:50;;285:1:25;2885:50:21;;2860:79;2852:88;;;;;;3043:4;3053:3;3061:6;3072:5;3084:7;;3082:9;;;;;;;;;;3014:81;;;;;;-1:-1:-1;;;;;3014:81:21;-1:-1:-1;;;;;3014:81:21;;;;;;;;-1:-1:-1;;;;;3014:81:21;-1:-1:-1;;;;;3014:81:21;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;3014:81:21;;;;;-1:-1:-1;3014:81:21;;;26:21:-1;;;6:49;;3014:81:21;;;;;3004:92;;;;;;;;;-1:-1:-1;3102:23:21;;;:10;:23;;;;;;:35;;-1:-1:-1;;;;;;3102:35:21;-1:-1:-1;;;;;3102:35:21;;;;;-1:-1:-1;3141:29:21;;:38;;;3183:37;;3004:92;;-1:-1:-1;3183:37:21;;-1:-1:-1;3183:28:21;;;-1:-1:-1;3183:37:21;;;-1:-1:-1;3183:37:21;;-1:-1:-1;3183:37:21;;-1:-1:-1;3183:37:21:i;:::-;-1:-1:-1;3224:21:21;;;;:8;:21;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;3224:32:21;;;;;;;;;;3266:51;;;;;;;;;;;;;3303:6;;-1:-1:-1;;;;;3266:51:21;;;3233:11;;3266:51;;3311:5;;3266:51;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3266:51:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3322:17;-1:-1:-1;;;;;3343:20:21;;3358:4;3343:20;3342:62;;3389:15;;3342:62;;;3367:19;;3342:62;3412:21;;;;:8;:21;;;;;:28;3322:82;;-1:-1:-1;3412:41:21;-1:-1:-1;3408:163:21;;3462:46;3476:11;3489:3;3494:6;3502:5;3462:13;:46::i;:::-;;3408:163;-1:-1:-1;2656:941:21;;;;;;:::o;1665:732::-;1796:12;-1:-1:-1;;;;;1871:17:21;;1867:395;;1907:19;1998:5;1992:12;1985:4;1978:5;1974:16;1971:1;1964:41;2038:33;;;-1:-1:-1;;;;;2038:33:21;;;;;;2024:4;;-1:-1:-1;1949:56:21;;-1:-1:-1;2054:3:21;;2038:33;;;;;;;;;1867:395;;;;2251:1;2248;2240:5;2234:12;2227:4;2220:5;2216:16;2208:6;2203:3;2198;2193:60;2182:71;;2176:82;2270:7;2266:128;;;2310:6;2305:3;-1:-1:-1;;;;;2291:33:21;2300:3;2291:33;2318:5;2291:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2291:33:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2266:128;;;2375:6;2370:3;-1:-1:-1;;;;;2349:40:21;2365:3;2349:40;2383:5;2349:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2349:40:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1665:732;;;;;;:::o;125:194:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;125:194:20;;;-1:-1:-1;125:194:20;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./ERC734KeyGetters.sol\";\nimport \"./ERC734KeyManagement.sol\";\nimport \"./ERC734Execute.sol\";\n\ncontract ERC734 is ERC734KeyGetters, ERC734KeyManagement, ERC734Execute\n{\n\tfunction() external payable {}\n\n\tconstructor(bytes32 root)\n\tpublic\n\t{\n\t\t_addKey(root, MANAGEMENT_KEY, ECDSA_TYPE);\n\t}\n}\n",
  "sourcePath": "/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734.sol",
  "ast": {
    "absolutePath": "/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734.sol",
    "exportedSymbols": {
      "ERC734": [
        2902
      ]
    },
    "id": 2903,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2876,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:20"
      },
      {
        "absolutePath": "/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734KeyGetters.sol",
        "file": "./ERC734KeyGetters.sol",
        "id": 2877,
        "nodeType": "ImportDirective",
        "scope": 2903,
        "sourceUnit": 3512,
        "src": "25:32:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734KeyManagement.sol",
        "file": "./ERC734KeyManagement.sol",
        "id": 2878,
        "nodeType": "ImportDirective",
        "scope": 2903,
        "sourceUnit": 3635,
        "src": "58:35:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734Execute.sol",
        "file": "./ERC734Execute.sol",
        "id": 2879,
        "nodeType": "ImportDirective",
        "scope": 2903,
        "sourceUnit": 3368,
        "src": "94:29:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2880,
              "name": "ERC734KeyGetters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3511,
              "src": "144:16:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC734KeyGetters_$3511",
                "typeString": "contract ERC734KeyGetters"
              }
            },
            "id": 2881,
            "nodeType": "InheritanceSpecifier",
            "src": "144:16:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2882,
              "name": "ERC734KeyManagement",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3634,
              "src": "162:19:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC734KeyManagement_$3634",
                "typeString": "contract ERC734KeyManagement"
              }
            },
            "id": 2883,
            "nodeType": "InheritanceSpecifier",
            "src": "162:19:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2884,
              "name": "ERC734Execute",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3367,
              "src": "183:13:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC734Execute_$3367",
                "typeString": "contract ERC734Execute"
              }
            },
            "id": 2885,
            "nodeType": "InheritanceSpecifier",
            "src": "183:13:20"
          }
        ],
        "contractDependencies": [
          3367,
          3428,
          3511,
          3634,
          3776
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2902,
        "linearizedBaseContracts": [
          2902,
          3367,
          3634,
          3511,
          3428,
          3776
        ],
        "name": "ERC734",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2888,
              "nodeType": "Block",
              "src": "228:2:20",
              "statements": []
            },
            "documentation": null,
            "id": 2889,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "208:2:20"
            },
            "returnParameters": {
              "id": 2887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "228:0:20"
            },
            "scope": 2902,
            "src": "200:30:20",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2900,
              "nodeType": "Block",
              "src": "268:49:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2895,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2891,
                        "src": "280:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2896,
                        "name": "MANAGEMENT_KEY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3639,
                        "src": "286:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2897,
                        "name": "ECDSA_TYPE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3651,
                        "src": "302:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2894,
                      "name": "_addKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3633,
                      "src": "272:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256)"
                      }
                    },
                    "id": 2898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "272:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2899,
                  "nodeType": "ExpressionStatement",
                  "src": "272:41:20"
                }
              ]
            },
            "documentation": null,
            "id": 2901,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2891,
                  "name": "root",
                  "nodeType": "VariableDeclaration",
                  "scope": 2901,
                  "src": "245:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2890,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "245:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "244:14:20"
            },
            "returnParameters": {
              "id": 2893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "268:0:20"
            },
            "scope": 2902,
            "src": "233:84:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2903,
        "src": "125:194:20"
      }
    ],
    "src": "0:320:20"
  },
  "legacyAST": {
    "absolutePath": "/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734.sol",
    "exportedSymbols": {
      "ERC734": [
        2902
      ]
    },
    "id": 2903,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2876,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:20"
      },
      {
        "absolutePath": "/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734KeyGetters.sol",
        "file": "./ERC734KeyGetters.sol",
        "id": 2877,
        "nodeType": "ImportDirective",
        "scope": 2903,
        "sourceUnit": 3512,
        "src": "25:32:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734KeyManagement.sol",
        "file": "./ERC734KeyManagement.sol",
        "id": 2878,
        "nodeType": "ImportDirective",
        "scope": 2903,
        "sourceUnit": 3635,
        "src": "58:35:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734Execute.sol",
        "file": "./ERC734Execute.sol",
        "id": 2879,
        "nodeType": "ImportDirective",
        "scope": 2903,
        "sourceUnit": 3368,
        "src": "94:29:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2880,
              "name": "ERC734KeyGetters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3511,
              "src": "144:16:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC734KeyGetters_$3511",
                "typeString": "contract ERC734KeyGetters"
              }
            },
            "id": 2881,
            "nodeType": "InheritanceSpecifier",
            "src": "144:16:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2882,
              "name": "ERC734KeyManagement",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3634,
              "src": "162:19:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC734KeyManagement_$3634",
                "typeString": "contract ERC734KeyManagement"
              }
            },
            "id": 2883,
            "nodeType": "InheritanceSpecifier",
            "src": "162:19:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2884,
              "name": "ERC734Execute",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3367,
              "src": "183:13:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC734Execute_$3367",
                "typeString": "contract ERC734Execute"
              }
            },
            "id": 2885,
            "nodeType": "InheritanceSpecifier",
            "src": "183:13:20"
          }
        ],
        "contractDependencies": [
          3367,
          3428,
          3511,
          3634,
          3776
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2902,
        "linearizedBaseContracts": [
          2902,
          3367,
          3634,
          3511,
          3428,
          3776
        ],
        "name": "ERC734",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2888,
              "nodeType": "Block",
              "src": "228:2:20",
              "statements": []
            },
            "documentation": null,
            "id": 2889,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "208:2:20"
            },
            "returnParameters": {
              "id": 2887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "228:0:20"
            },
            "scope": 2902,
            "src": "200:30:20",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2900,
              "nodeType": "Block",
              "src": "268:49:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2895,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2891,
                        "src": "280:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2896,
                        "name": "MANAGEMENT_KEY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3639,
                        "src": "286:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2897,
                        "name": "ECDSA_TYPE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3651,
                        "src": "302:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2894,
                      "name": "_addKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3633,
                      "src": "272:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256)"
                      }
                    },
                    "id": 2898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "272:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2899,
                  "nodeType": "ExpressionStatement",
                  "src": "272:41:20"
                }
              ]
            },
            "documentation": null,
            "id": 2901,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2891,
                  "name": "root",
                  "nodeType": "VariableDeclaration",
                  "scope": 2901,
                  "src": "245:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2890,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "245:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "244:14:20"
            },
            "returnParameters": {
              "id": 2893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "268:0:20"
            },
            "scope": 2902,
            "src": "233:84:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2903,
        "src": "125:194:20"
      }
    ],
    "src": "0:320:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-04T20:08:16.882Z",
  "devdoc": {
    "methods": {
      "addKey(bytes32,uint256,uint256)": {
        "details": "Add key data to the identity if key + purpose tuple doesn't already exist",
        "params": {
          "_key": "Key bytes to add",
          "_keyType": "Key type to add",
          "_purpose": "Purpose to add"
        },
        "return": "`true` if key was added, `false` if it already exists"
      },
      "addrToKey(address)": {
        "details": "Convert an Ethereum address (20 bytes) to an ERC734 key (32 bytes)"
      },
      "approve(uint256,bool)": {
        "details": "External api to the approve function that considers the key of msg.sender",
        "params": {
          "_id": "Execution ID",
          "_value": "`true` if it's an approval, `false` if it's a disapproval"
        },
        "return": "`false` if it's a disapproval and there's no previous approval from the sender OR  if it's an approval that triggered a failed execution. `true` if it's a disapproval that  undos a previous approval from the sender OR if it's an approval that succeded OR  if it's an approval that triggered a succesful execution"
      },
      "changeActionThreshold(uint256)": {
        "details": "Change multi-sig threshold for ACTION_KEY",
        "params": {
          "_threshold": "New threshold to change it to (will throw if 0 or larger than available keys)"
        }
      },
      "changeManagementThreshold(uint256)": {
        "details": "Change multi-sig threshold for MANAGEMENT_KEY",
        "params": {
          "_threshold": "New threshold to change it to (will throw if 0 or larger than available keys)"
        }
      },
      "execute(address,uint256,bytes)": {
        "details": "External api to the execute function that considers the key of msg.sender",
        "params": {
          "_data": "ABI encoded call data (msg.data)",
          "_to": "address being called (msg.sender)",
          "_value": "ether being sent (msg.value)"
        }
      },
      "getKey(bytes32)": {
        "details": "Find the key data, if held by the identity",
        "params": {
          "_key": "Key bytes to find"
        },
        "return": "`(purposes, keyType, key)` tuple if the key exists"
      },
      "getKeysByPurpose(uint256)": {
        "details": "Find all the keys held by this identity for a given purpose",
        "params": {
          "_purpose": "Purpose to find"
        },
        "return": "Array with key bytes for that purpose (empty if none)"
      },
      "keyHasPurpose(bytes32,uint256)": {
        "details": "Find if a key has is present and has the given purpose",
        "params": {
          "_key": "Key bytes to find",
          "purpose": "Purpose to find"
        },
        "return": "Boolean indicating whether the key exists or not"
      },
      "numKeys()": {
        "details": "Number of keys managed by the contract",
        "return": "Unsigned integer number of keys"
      },
      "removeKey(bytes32,uint256)": {
        "details": "Remove key data from the identity",
        "params": {
          "_key": "Key bytes to remove",
          "_purpose": "Purpose to remove"
        },
        "return": "`true` if key was found and removed, `false` if it wasn't found"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}