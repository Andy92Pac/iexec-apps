{
  "contractName": "Identity",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        },
        {
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "name": "_gasLimit",
          "type": "uint256"
        },
        {
          "name": "_gasPrice",
          "type": "uint256"
        },
        {
          "name": "_gasToken",
          "type": "address"
        },
        {
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "executeSigned",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MANAGEMENT_KEY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "keyNonce",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getKey",
      "outputs": [
        {
          "name": "purposes",
          "type": "uint256[]"
        },
        {
          "name": "keyType",
          "type": "uint256"
        },
        {
          "name": "key",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        },
        {
          "name": "_value",
          "type": "bool"
        },
        {
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "name": "_gasLimit",
          "type": "uint256"
        },
        {
          "name": "_gasPrice",
          "type": "uint256"
        },
        {
          "name": "_gasToken",
          "type": "address"
        },
        {
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "approveSigned",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        },
        {
          "name": "_purpose",
          "type": "uint256"
        },
        {
          "name": "_keyType",
          "type": "uint256"
        }
      ],
      "name": "addKey",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "RSA_TYPE",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "actionThreshold",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ECDSA_TYPE",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        },
        {
          "name": "_purpose",
          "type": "uint256"
        }
      ],
      "name": "removeKey",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addrToKey",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "approved",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        },
        {
          "name": "_value",
          "type": "bool"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ACTION_KEY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_purpose",
          "type": "uint256"
        }
      ],
      "name": "getKeysByPurpose",
      "outputs": [
        {
          "name": "keys",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ENCRYPTION_KEY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "managementThreshold",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "name": "executionId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CLAIM_SIGNER_KEY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numKeys",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_threshold",
          "type": "uint256"
        }
      ],
      "name": "changeManagementThreshold",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_key",
          "type": "bytes32"
        },
        {
          "name": "purpose",
          "type": "uint256"
        }
      ],
      "name": "keyHasPurpose",
      "outputs": [
        {
          "name": "exists",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_threshold",
          "type": "uint256"
        }
      ],
      "name": "changeActionThreshold",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "executions",
      "outputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "root",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "executionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "ContractCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "purpose",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "keyType",
          "type": "uint256"
        }
      ],
      "name": "KeyAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "purpose",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "keyType",
          "type": "uint256"
        }
      ],
      "name": "KeyRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "executionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "ExecutionRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "executionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Executed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "executionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "ExecutionFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "executionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "Approved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "messageHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "success",
          "type": "bool"
        }
      ],
      "name": "ExecutedSigned",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"},{\"name\":\"_nonce\",\"type\":\"uint256\"},{\"name\":\"_gasLimit\",\"type\":\"uint256\"},{\"name\":\"_gasPrice\",\"type\":\"uint256\"},{\"name\":\"_gasToken\",\"type\":\"address\"},{\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"executeSigned\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MANAGEMENT_KEY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"keyNonce\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"name\":\"keyType\",\"type\":\"uint256\"},{\"name\":\"key\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"bool\"},{\"name\":\"_nonce\",\"type\":\"uint256\"},{\"name\":\"_gasLimit\",\"type\":\"uint256\"},{\"name\":\"_gasPrice\",\"type\":\"uint256\"},{\"name\":\"_gasToken\",\"type\":\"address\"},{\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"approveSigned\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_purpose\",\"type\":\"uint256\"},{\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"RSA_TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"actionThreshold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ECDSA_TYPE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addrToKey\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approved\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ACTION_KEY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ENCRYPTION_KEY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"managementThreshold\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"name\":\"executionId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CLAIM_SIGNER_KEY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numKeys\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"changeManagementThreshold\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_key\",\"type\":\"bytes32\"},{\"name\":\"purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"name\":\"exists\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"changeActionThreshold\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"executions\",\"outputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"root\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"ExecutedSigned\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Add key data to the identity if key + purpose tuple doesn't already exist\",\"params\":{\"_key\":\"Key bytes to add\",\"_keyType\":\"Key type to add\",\"_purpose\":\"Purpose to add\"},\"return\":\"`true` if key was added, `false` if it already exists\"},\"addrToKey(address)\":{\"details\":\"Convert an Ethereum address (20 bytes) to an ERC734 key (32 bytes)\"},\"approve(uint256,bool)\":{\"details\":\"External api to the approve function that considers the key of msg.sender\",\"params\":{\"_id\":\"Execution ID\",\"_value\":\"`true` if it's an approval, `false` if it's a disapproval\"},\"return\":\"`false` if it's a disapproval and there's no previous approval from the sender OR  if it's an approval that triggered a failed execution. `true` if it's a disapproval that  undos a previous approval from the sender OR if it's an approval that succeded OR  if it's an approval that triggered a succesful execution\"},\"changeActionThreshold(uint256)\":{\"details\":\"Change multi-sig threshold for ACTION_KEY\",\"params\":{\"_threshold\":\"New threshold to change it to (will throw if 0 or larger than available keys)\"}},\"changeManagementThreshold(uint256)\":{\"details\":\"Change multi-sig threshold for MANAGEMENT_KEY\",\"params\":{\"_threshold\":\"New threshold to change it to (will throw if 0 or larger than available keys)\"}},\"execute(address,uint256,bytes)\":{\"details\":\"External api to the execute function that considers the key of msg.sender\",\"params\":{\"_data\":\"ABI encoded call data (msg.data)\",\"_to\":\"address being called (msg.sender)\",\"_value\":\"ether being sent (msg.value)\"}},\"getKey(bytes32)\":{\"details\":\"Find the key data, if held by the identity\",\"params\":{\"_key\":\"Key bytes to find\"},\"return\":\"`(purposes, keyType, key)` tuple if the key exists\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Find all the keys held by this identity for a given purpose\",\"params\":{\"_purpose\":\"Purpose to find\"},\"return\":\"Array with key bytes for that purpose (empty if none)\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Find if a key has is present and has the given purpose\",\"params\":{\"_key\":\"Key bytes to find\",\"purpose\":\"Purpose to find\"},\"return\":\"Boolean indicating whether the key exists or not\"},\"numKeys()\":{\"details\":\"Number of keys managed by the contract\",\"return\":\"Unsigned integer number of keys\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Remove key data from the identity\",\"params\":{\"_key\":\"Key bytes to remove\",\"_purpose\":\"Purpose to remove\"},\"return\":\"`true` if key was found and removed, `false` if it wasn't found\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC1077_ExecutableSignedMessages/Identity.sol\":\"Identity\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC1077_ExecutableSignedMessages/ERC1077.sol\":{\"keccak256\":\"0xb84905fc95c2db5aa07f4196297b9ed04a7eed977244144f6f9c1b85684cd063\",\"urls\":[\"bzzr://af50147eec650ec11f4f5f2c6b378796ccaf7060fd370a863cf97ab347a210b3\",\"dweb:/ipfs/QmVKuGuju8xEjNBwEbZyUwmyn7CJxAER1eBj3sWyqiUtMV\"]},\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC1077_ExecutableSignedMessages/IERC1077.sol\":{\"keccak256\":\"0xcd2cdae3d5e56f91368982f390a59c4c4cada46662314240ca73122f3a909763\",\"urls\":[\"bzzr://a8439dfa16e72c8c8d4b648bd216e6a23da66497081c5f5944954542934545b3\",\"dweb:/ipfs/QmS29Mf4m7EgyL7bv9Snchi293stCVmcyesp13owKQW648\"]},\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC1077_ExecutableSignedMessages/Identity.sol\":{\"keccak256\":\"0xd7c593827f098fdc6ac130a1e8aa2f79c9c2d01ea39a93d37c825610d7102b69\",\"urls\":[\"bzzr://d45c8bac67ff6ae067e4d534755b73596287e8d5f1e14b228a99329685e54970\",\"dweb:/ipfs/QmSc3CWn4KjfMZCZTrSKXHRZ1NCi6KMmgf6SZ4yYH8QWE1\"]},\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC20_Token/IERC20.sol\":{\"keccak256\":\"0xf860a0cc0323b30b0421d82abe8d42b03199a70134db66b52306ad560169bf45\",\"urls\":[\"bzzr://8d59715dd78851719797c199ad64d8dda451be490fdd3489bc764bf33a925412\",\"dweb:/ipfs/QmSYtjtMSwRKE88mZB4wH2YXK7kc2jhju6Le1vmpjoyQ6M\"]},\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734.sol\":{\"keccak256\":\"0xef1c5ab9b0d585b9c146da9db5dfb0409facb0532217c3063e0b817504a5a69c\",\"urls\":[\"bzzr://8851fa58421a5b3a17b7d648ee45095535b333674e30c608795ce48b9e44cc62\",\"dweb:/ipfs/QmVFcG3KArWSVTZmua2nnp1eKRfnLH5fYdcnpNkr2FwbF5\"]},\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734Execute.sol\":{\"keccak256\":\"0x2db4a99633454e80ec22322ec22d619b0308f977c6557cdd15407017eadb60c6\",\"urls\":[\"bzzr://5ecee6668a3d5002517f3edeb066acfe7b3b897ad5cb0f1721cd4b0adddc60e6\",\"dweb:/ipfs/QmbbtdBj3puHAMzvABjGsHurw1Q7b6suUGZQAehkJKtzJu\"]},\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734KeyBase.sol\":{\"keccak256\":\"0x192b60cd983963e826ab0fc106622d51edaec6cf9f66c7b0e537abdd8c488b3c\",\"urls\":[\"bzzr://4bf81c2d9011f2f4c874b16d59405b7b9bad86c62462d0a4e7a20b1be2aee7d9\",\"dweb:/ipfs/QmeecAisGRG1gXtbdDYSbK1DNCaUeQHnvPFuuhdhTwWEYE\"]},\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734KeyGetters.sol\":{\"keccak256\":\"0xc23637ac9175b768a7c468b9b3d8c16f9fd774137d5994b0963f78bd85310852\",\"urls\":[\"bzzr://c9d5776e4e1881fc2a5e9ca92657a5f0cef02bbfcdf4a8ff3f46d2f7b8bb4882\",\"dweb:/ipfs/QmPgJB8zoWSfjyqfvAgdtiHNEfw7CVjFMeJMn25WMHFGpt\"]},\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/ERC734KeyManagement.sol\":{\"keccak256\":\"0x0814ff61bf87804a09494e8488bce8dd3bcff9eeaee0bc988ce1e7afa8543868\",\"urls\":[\"bzzr://aeb0e0fbccc0275255949f4a60d66d2cb2997c3ff205c434f24447cfc3d9b342\",\"dweb:/ipfs/Qmetwvu6ikp9raXrRQK8LsKg8sHhQJwcZ8WSNmmUcSJiqr\"]},\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/IERC734.sol\":{\"keccak256\":\"0x46532e2d419a87bf604b354318a19d56a3dc25fa7ad6f94c77bd2aa8ce54a755\",\"urls\":[\"bzzr://8ada95bcec956bdd6e7c4e3ec840e9e13cfc04584668d0df2c00459f94d74541\",\"dweb:/ipfs/QmPMM8Prd6iG2g23gbu3arBiy8F8CiDuEZMJPd99WYpXbf\"]},\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC734_KeyManager/KeyStoreLib.sol\":{\"keccak256\":\"0x67453dd06877ae646e55e973b94b44c9ba3ecbed11aae35a7b7eec46d754654e\",\"urls\":[\"bzzr://da66de0fff2844bfbc2f294838400e68b085b619925006525b2eca99a791953e\",\"dweb:/ipfs/QmTDuPL7bZRcfi4KfpArGq8qEvzC8yvAgyz6xtdrVTLrvs\"]},\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/Libs/ECDSALib.sol\":{\"keccak256\":\"0x3f3b1ae92eef9f7e998ac0a6bad6c4d8ba411f7f537a6906a06339b8887081a0\",\"urls\":[\"bzzr://d502d4049cc2b5f1ed7c7e62d8760683f8d7a8171b4f839221c88d7dfa94108e\",\"dweb:/ipfs/QmPrUB5i8JsveFrGtT3ULHK4mrTJRqyJNzfk6UPM6hFqVL\"]},\"/home/amxx/Work/iExec/code/iexec-solidity/contracts/Libs/SafeMath.sol\":{\"keccak256\":\"0x328ae48fe8bbceaa23232dbfb414450fb378186ba4142b2fa9a06cc01301fcfb\",\"urls\":[\"bzzr://3262af37321420dca5af24bb589962486ec28ec28a1eb25d47d56ffb51a2b3e2\",\"dweb:/ipfs/QmTWjkk2Z8cHjfzJNQ21N9o7CgDuqzCmPfFoUUjUbrxiKK\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./ERC1077.sol\";\n\ncontract Identity is ERC1077\n{\n\tfunction() external payable {}\n\n\tconstructor(bytes32 root)\n\tpublic\n\t{\n\t\t_addKey(root, MANAGEMENT_KEY, ECDSA_TYPE);\n\t}\n\n}\n",
  "sourcePath": "/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC1077_ExecutableSignedMessages/Identity.sol",
  "ast": {
    "absolutePath": "/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC1077_ExecutableSignedMessages/Identity.sol",
    "exportedSymbols": {
      "Identity": [
        1424
      ]
    },
    "id": 1425,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1404,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC1077_ExecutableSignedMessages/ERC1077.sol",
        "file": "./ERC1077.sol",
        "id": 1405,
        "nodeType": "ImportDirective",
        "scope": 1425,
        "sourceUnit": 1345,
        "src": "25:23:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1406,
              "name": "ERC1077",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1344,
              "src": "71:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1077_$1344",
                "typeString": "contract ERC1077"
              }
            },
            "id": 1407,
            "nodeType": "InheritanceSpecifier",
            "src": "71:7:8"
          }
        ],
        "contractDependencies": [
          1344,
          1402,
          2902,
          3367,
          3428,
          3511,
          3634,
          3776
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1424,
        "linearizedBaseContracts": [
          1424,
          1344,
          2902,
          3367,
          3634,
          3511,
          3428,
          3776,
          1402
        ],
        "name": "Identity",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1410,
              "nodeType": "Block",
              "src": "110:2:8",
              "statements": []
            },
            "documentation": null,
            "id": 1411,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "90:2:8"
            },
            "returnParameters": {
              "id": 1409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "110:0:8"
            },
            "scope": 1424,
            "src": "82:30:8",
            "stateMutability": "payable",
            "superFunction": 2889,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1422,
              "nodeType": "Block",
              "src": "150:49:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1417,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1413,
                        "src": "162:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1418,
                        "name": "MANAGEMENT_KEY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3639,
                        "src": "168:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1419,
                        "name": "ECDSA_TYPE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3651,
                        "src": "184:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1416,
                      "name": "_addKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3633,
                      "src": "154:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256)"
                      }
                    },
                    "id": 1420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "154:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1421,
                  "nodeType": "ExpressionStatement",
                  "src": "154:41:8"
                }
              ]
            },
            "documentation": null,
            "id": 1423,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1413,
                  "name": "root",
                  "nodeType": "VariableDeclaration",
                  "scope": 1423,
                  "src": "127:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1412,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "127:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "126:14:8"
            },
            "returnParameters": {
              "id": 1415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "150:0:8"
            },
            "scope": 1424,
            "src": "115:84:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1425,
        "src": "50:152:8"
      }
    ],
    "src": "0:203:8"
  },
  "legacyAST": {
    "absolutePath": "/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC1077_ExecutableSignedMessages/Identity.sol",
    "exportedSymbols": {
      "Identity": [
        1424
      ]
    },
    "id": 1425,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1404,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/home/amxx/Work/iExec/code/iexec-solidity/contracts/ERC1077_ExecutableSignedMessages/ERC1077.sol",
        "file": "./ERC1077.sol",
        "id": 1405,
        "nodeType": "ImportDirective",
        "scope": 1425,
        "sourceUnit": 1345,
        "src": "25:23:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1406,
              "name": "ERC1077",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1344,
              "src": "71:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1077_$1344",
                "typeString": "contract ERC1077"
              }
            },
            "id": 1407,
            "nodeType": "InheritanceSpecifier",
            "src": "71:7:8"
          }
        ],
        "contractDependencies": [
          1344,
          1402,
          2902,
          3367,
          3428,
          3511,
          3634,
          3776
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1424,
        "linearizedBaseContracts": [
          1424,
          1344,
          2902,
          3367,
          3634,
          3511,
          3428,
          3776,
          1402
        ],
        "name": "Identity",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1410,
              "nodeType": "Block",
              "src": "110:2:8",
              "statements": []
            },
            "documentation": null,
            "id": 1411,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "90:2:8"
            },
            "returnParameters": {
              "id": 1409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "110:0:8"
            },
            "scope": 1424,
            "src": "82:30:8",
            "stateMutability": "payable",
            "superFunction": 2889,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1422,
              "nodeType": "Block",
              "src": "150:49:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1417,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1413,
                        "src": "162:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1418,
                        "name": "MANAGEMENT_KEY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3639,
                        "src": "168:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1419,
                        "name": "ECDSA_TYPE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3651,
                        "src": "184:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1416,
                      "name": "_addKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3633,
                      "src": "154:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256)"
                      }
                    },
                    "id": 1420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "154:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1421,
                  "nodeType": "ExpressionStatement",
                  "src": "154:41:8"
                }
              ]
            },
            "documentation": null,
            "id": 1423,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1413,
                  "name": "root",
                  "nodeType": "VariableDeclaration",
                  "scope": 1423,
                  "src": "127:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1412,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "127:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "126:14:8"
            },
            "returnParameters": {
              "id": 1415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "150:0:8"
            },
            "scope": 1424,
            "src": "115:84:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1425,
        "src": "50:152:8"
      }
    ],
    "src": "0:203:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-04T20:08:16.847Z",
  "devdoc": {
    "methods": {
      "addKey(bytes32,uint256,uint256)": {
        "details": "Add key data to the identity if key + purpose tuple doesn't already exist",
        "params": {
          "_key": "Key bytes to add",
          "_keyType": "Key type to add",
          "_purpose": "Purpose to add"
        },
        "return": "`true` if key was added, `false` if it already exists"
      },
      "addrToKey(address)": {
        "details": "Convert an Ethereum address (20 bytes) to an ERC734 key (32 bytes)"
      },
      "approve(uint256,bool)": {
        "details": "External api to the approve function that considers the key of msg.sender",
        "params": {
          "_id": "Execution ID",
          "_value": "`true` if it's an approval, `false` if it's a disapproval"
        },
        "return": "`false` if it's a disapproval and there's no previous approval from the sender OR  if it's an approval that triggered a failed execution. `true` if it's a disapproval that  undos a previous approval from the sender OR if it's an approval that succeded OR  if it's an approval that triggered a succesful execution"
      },
      "changeActionThreshold(uint256)": {
        "details": "Change multi-sig threshold for ACTION_KEY",
        "params": {
          "_threshold": "New threshold to change it to (will throw if 0 or larger than available keys)"
        }
      },
      "changeManagementThreshold(uint256)": {
        "details": "Change multi-sig threshold for MANAGEMENT_KEY",
        "params": {
          "_threshold": "New threshold to change it to (will throw if 0 or larger than available keys)"
        }
      },
      "execute(address,uint256,bytes)": {
        "details": "External api to the execute function that considers the key of msg.sender",
        "params": {
          "_data": "ABI encoded call data (msg.data)",
          "_to": "address being called (msg.sender)",
          "_value": "ether being sent (msg.value)"
        }
      },
      "getKey(bytes32)": {
        "details": "Find the key data, if held by the identity",
        "params": {
          "_key": "Key bytes to find"
        },
        "return": "`(purposes, keyType, key)` tuple if the key exists"
      },
      "getKeysByPurpose(uint256)": {
        "details": "Find all the keys held by this identity for a given purpose",
        "params": {
          "_purpose": "Purpose to find"
        },
        "return": "Array with key bytes for that purpose (empty if none)"
      },
      "keyHasPurpose(bytes32,uint256)": {
        "details": "Find if a key has is present and has the given purpose",
        "params": {
          "_key": "Key bytes to find",
          "purpose": "Purpose to find"
        },
        "return": "Boolean indicating whether the key exists or not"
      },
      "numKeys()": {
        "details": "Number of keys managed by the contract",
        "return": "Unsigned integer number of keys"
      },
      "removeKey(bytes32,uint256)": {
        "details": "Remove key data from the identity",
        "params": {
          "_key": "Key bytes to remove",
          "_purpose": "Purpose to remove"
        },
        "return": "`true` if key was found and removed, `false` if it wasn't found"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}